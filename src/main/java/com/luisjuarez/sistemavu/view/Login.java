package com.luisjuarez.sistemavu.view;

import com.luisjuarez.sistemavu.model.Empleado;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author conta
 */
public class Login extends javax.swing.JFrame {

    private int intentos = 0;
    /**
     * Creates new form NewJFrame
     */
    public Login() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        header = new javax.swing.JPanel();
        lbl_logo = new javax.swing.JLabel();
        lbl_title = new javax.swing.JLabel();
        lbl_author = new javax.swing.JLabel();
        lbl_copyright = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        btn_close = new javax.swing.JButton();
        lbl_userImg = new javax.swing.JLabel();
        lbl_logIn = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        btn_login = new javax.swing.JButton();
        lbl_error = new javax.swing.JLabel();
        lbl_error1 = new javax.swing.JLabel();
        btn_forgotPassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar sesión");
        setUndecorated(true);
        setSize(new java.awt.Dimension(0, 0));

        header.setBackground(new java.awt.Color(0, 0, 255));
        header.setForeground(new java.awt.Color(51, 51, 51));
        header.setPreferredSize(new java.awt.Dimension(300, 400));
        header.setLayout(new java.awt.GridBagLayout());

        lbl_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        header.add(lbl_logo, gridBagConstraints);

        lbl_title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_title.setForeground(new java.awt.Color(255, 255, 255));
        lbl_title.setText("Sistema Ferretería");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        header.add(lbl_title, gridBagConstraints);

        lbl_author.setForeground(new java.awt.Color(255, 255, 255));
        lbl_author.setText("SistemaVU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        header.add(lbl_author, gridBagConstraints);

        lbl_copyright.setForeground(new java.awt.Color(255, 255, 255));
        lbl_copyright.setText("Todos los derechos reservados © 2025");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        header.add(lbl_copyright, gridBagConstraints);

        getContentPane().add(header, java.awt.BorderLayout.WEST);

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setForeground(new java.awt.Color(255, 255, 255));
        body.setPreferredSize(new java.awt.Dimension(300, 400));
        body.setLayout(new java.awt.GridBagLayout());

        btn_close.setForeground(new java.awt.Color(255, 255, 255));
        btn_close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btn_close.setBorder(null);
        btn_close.setBorderPainted(false);
        btn_close.setContentAreaFilled(false);
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 30, 0);
        body.add(btn_close, gridBagConstraints);

        lbl_userImg.setBackground(new java.awt.Color(255, 255, 255));
        lbl_userImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 10, 0);
        body.add(lbl_userImg, gridBagConstraints);

        lbl_logIn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_logIn.setForeground(new java.awt.Color(69, 69, 69));
        lbl_logIn.setText("Iniciar Sesión");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 30, 0);
        body.add(lbl_logIn, gridBagConstraints);

        txt_user.setBackground(new java.awt.Color(69, 69, 69));
        txt_user.setForeground(new java.awt.Color(255, 255, 255));
        txt_user.setText("Usuario");
        txt_user.setMargin(new java.awt.Insets(2, 10, 2, 6));
        txt_user.setMinimumSize(new java.awt.Dimension(180, 26));
        txt_user.setPreferredSize(new java.awt.Dimension(180, 26));
        txt_user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_userFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_userFocusLost(evt);
            }
        });
        txt_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_userActionPerformed(evt);
            }
        });
        txt_user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_userKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 10, 0);
        body.add(txt_user, gridBagConstraints);

        txt_password.setBackground(new java.awt.Color(69, 69, 69));
        txt_password.setForeground(new java.awt.Color(255, 255, 255));
        txt_password.setText("contrasena");
        txt_password.setMargin(new java.awt.Insets(2, 10, 2, 6));
        txt_password.setMinimumSize(new java.awt.Dimension(180, 26));
        txt_password.setPreferredSize(new java.awt.Dimension(180, 26));
        txt_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_passwordFocusLost(evt);
            }
        });
        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });
        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passwordKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 20, 0);
        body.add(txt_password, gridBagConstraints);

        btn_login.setText("Iniciar");
        btn_login.setFocusable(false);
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        btn_login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_loginKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 15, 0);
        body.add(btn_login, gridBagConstraints);

        lbl_error.setForeground(new java.awt.Color(255, 255, 255));
        lbl_error.setText("Usuario o contraseña incorecto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 15, 0);
        body.add(lbl_error, gridBagConstraints);

        lbl_error1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_error1.setText("Usuario o contraseña incorecto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 15, 0);
        body.add(lbl_error1, gridBagConstraints);

        btn_forgotPassword.setBackground(new java.awt.Color(69, 69, 69));
        btn_forgotPassword.setForeground(new java.awt.Color(69, 69, 69));
        btn_forgotPassword.setText("Olvidé mi contraseña");
        btn_forgotPassword.setBorder(null);
        btn_forgotPassword.setBorderPainted(false);
        btn_forgotPassword.setContentAreaFilled(false);
        btn_forgotPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_forgotPasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 10, 0);
        body.add(btn_forgotPassword, gridBagConstraints);

        getContentPane().add(body, java.awt.BorderLayout.EAST);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_closeActionPerformed

    private void txt_userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_userFocusGained
        if (txt_user.getText().equalsIgnoreCase("usuario")) {
            txt_user.setText("");
        }
    }//GEN-LAST:event_txt_userFocusGained

    private void txt_userFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_userFocusLost
        if (txt_user.getText().isEmpty()) {
            txt_user.setText("Usuario");
        }
    }//GEN-LAST:event_txt_userFocusLost

    private void txt_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_passwordFocusGained
        if (new String(txt_password.getPassword()).equalsIgnoreCase("contrasena")) {
            txt_password.setText("");
        }
    }//GEN-LAST:event_txt_passwordFocusGained

    private void txt_passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_passwordFocusLost
        if (new String(txt_password.getPassword()).isEmpty()) {
            txt_password.setText("contrasena");
        }
    }//GEN-LAST:event_txt_passwordFocusLost

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
       Empleado empleado = SistemaPrincipal.getEmpleadoService().autenticar(txt_user.getText(), new String(txt_password.getPassword()));
        if (empleado!=null) {
            SistemaPrincipal sp = new SistemaPrincipal(empleado);
            sp.setVisible(true);
            this.dispose();
        }else{
            manejarIntentos();
            lbl_error1.setText("Usuario o contraseña incorrectos.");
            lbl_error.setText("Intento: "+intentos);
            lbl_error.setForeground(Color.red);
            lbl_error1.setForeground(Color.red);
        }
    }//GEN-LAST:event_btn_loginActionPerformed

    private void txt_userKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Empleado empleado = SistemaPrincipal.getEmpleadoService().autenticar(txt_user.getText(), new String(txt_password.getPassword()));
        if (empleado!=null) {
            SistemaPrincipal sp = new SistemaPrincipal(empleado);
            sp.setVisible(true);
            this.dispose();
        }else{
            manejarIntentos();
            lbl_error1.setText("Usuario o contraseña incorrectos.");
            lbl_error.setText("Intento: "+intentos);
            lbl_error.setForeground(Color.red);
            lbl_error1.setForeground(Color.red);
        }
        }
    }//GEN-LAST:event_txt_userKeyPressed


    private void txt_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passwordKeyPressed
        
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Empleado empleado = SistemaPrincipal.getEmpleadoService().autenticar(txt_user.getText(), new String(txt_password.getPassword()));
        if (empleado!=null) {
            SistemaPrincipal sp = new SistemaPrincipal(empleado);
            sp.setVisible(true);
            this.dispose();
        }else{
            manejarIntentos();
            lbl_error1.setText("Usuario o contraseña incorrectos.");
            lbl_error.setText("Intento: "+intentos);
            lbl_error.setForeground(Color.red);
            lbl_error1.setForeground(Color.red);
        }
        }
    }//GEN-LAST:event_txt_passwordKeyPressed

    private void btn_loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_loginKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String username = txt_user.getText();
            String password = new String(txt_password.getPassword());
            if (!username.equalsIgnoreCase("usuario") && !username.isEmpty() && !password.equalsIgnoreCase("contrasena") && !password.isEmpty()) {
                Empleado empleado = SistemaPrincipal.getEmpleadoService().autenticar(txt_user.getText(), new String(txt_password.getPassword()));
                if (empleado != null) {
                    lbl_error.setForeground(Color.red);
                    SistemaPrincipal sp = new SistemaPrincipal(empleado);
                    sp.setVisible(true);
                    this.dispose();
                } else {
                    lbl_error.setForeground(Color.red);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes ingresar el usuario y la contraseña", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_loginKeyPressed

    private void btn_forgotPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_forgotPasswordActionPerformed
        this.dispose();
        RecuperarContraseña rc = new RecuperarContraseña();
        rc.setVisible(true);
    }//GEN-LAST:event_btn_forgotPasswordActionPerformed

    private void txt_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_userActionPerformed

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel body;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_forgotPassword;
    private javax.swing.JButton btn_login;
    private javax.swing.JPanel header;
    private javax.swing.JLabel lbl_author;
    private javax.swing.JLabel lbl_copyright;
    private javax.swing.JLabel lbl_error;
    private javax.swing.JLabel lbl_error1;
    private javax.swing.JLabel lbl_logIn;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JLabel lbl_userImg;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
    public void manejarIntentos() {
        intentos++;
        int tiempoEspera = 0;

        if (intentos == 3) {
            tiempoEspera = 1;
        } else if (intentos == 4) {
            tiempoEspera = 3;
        } else if (intentos == 5) {
            tiempoEspera = 5;
        } else if (intentos >= 6) {
            JOptionPane.showMessageDialog(null, "Haz llegado al límite de intentos posibles", "Información", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            //tiempoEspera = 10;
        }

        if (tiempoEspera > 0) {
            final int finalTiempoEspera = tiempoEspera * 60; // Tiempo en segundos

            // Desactiva el botón de inicio de sesión
            btn_login.setEnabled(false);
            btn_close.setEnabled(false);
            txt_user.setEnabled(false);
            txt_password.setEnabled(false);
            btn_forgotPassword.setEnabled(false);
            // Variables para el tiempo restante
            final int[] segundosRestantes = {finalTiempoEspera};

            // Timer para actualizar lbl_error y reactivar el botón después de esperar
            Timer countDownTimer = new Timer(1000, e -> {
                if (segundosRestantes[0] > 0) {
                    lbl_error.setText("Espera " + (segundosRestantes[0] / 60) + " minutos y " + (segundosRestantes[0] % 60) + " segundos");
                    segundosRestantes[0]--;
                } else {
                    // Reactivar el botón y detener el temporizador cuando el tiempo se agote
                    ((Timer) e.getSource()).stop();
                    lbl_error.setText("");
                    btn_login.setEnabled(true);
                    btn_close.setEnabled(true);
                    txt_password.setEnabled(true);
                    txt_user.setEnabled(true);
                }
            });
            countDownTimer.start();

            // Simula el tiempo de espera sin bloquear el hilo de la interfaz gráfica
            new Thread(() -> {
                try {
                    TimeUnit.SECONDS.sleep(finalTiempoEspera);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }).start();
        }
    }
}
